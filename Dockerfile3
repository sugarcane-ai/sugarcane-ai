FROM node:18-slim AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable


RUN apt-get update
RUN apt-get install ca-certificates python3 build-essential -y


FROM base AS builder
WORKDIR /usr/src/app
COPY . /usr/src/app

RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile
RUN pnpm run -r build
# RUN pnpm --filter factory build
RUN pnpm --filter='factory' deploy pruned --prod
# RUN pnpm deploy --filter=factory --prod /apps/factory
# RUN pnpm deploy --filter=app2 --prod /prod/app2

FROM base AS factory
WORKDIR /app
ENV NODE_ENV=production
RUN addgroup --system --gid 1001 app
RUN adduser --system --uid 1001 app

USER app
ENV NEXT_TELEMETRY_DISABLED 1

# COPY --from=build /usr/src/app/apps/factory/.next /apps/factory
# COPY --chown=app:app --from=builder /usr/src/app/apps/factory/.next/standalone src/
# COPY --chown=app:app --from=builder /usr/src/app/apps/factory/public src/public
# COPY --chown=app:app --from=builder /usr/src/app/apps/factory/.next/static src/.next/static



# You only need to copy next.config.js if you are NOT using the default configuration
COPY --chown=app:app --from=builder /usr/src/app/apps/factory/next.config.mjs ./
COPY --chown=app:app --from=builder /usr/src/app/apps/factory/public ./public
COPY --chown=app:app --from=builder /usr/src/app/apps/factory/node_modules ./node_modules
COPY --chown=app:app --from=builder /usr/src/app/apps/factory/package.json ./package.json
COPY --chown=app:app --from=builder /usr/src/app/apps/factory/.env ./

COPY --chown=app:app --from=builder /usr/src/app/apps/factory/.next/standalone ./
COPY --chown=app:app --from=builder /usr/src/app/apps/factory/.next/static ./.next/static
RUN chown app:app .next




ENV PORT 3000
EXPOSE 3000
# CMD [ "pnpm", "start" ]
# CMD ["node", "src/apps/frontend/server.js"]
# CMD ["node_modules/.bin/next", "start"]
CMD ["node", "server.js"]



# # Rebuild the source code only when needed
# FROM base AS builder
# WORKDIR /app
# COPY --from=deps /app/node_modules ./node_modules
# COPY . .

# # Next.js collects completely anonymous telemetry data about general usage.
# # Learn more here: https://nextjs.org/telemetry
# # Uncomment the following line in case you want to disable telemetry during the build.
# # ENV NEXT_TELEMETRY_DISABLED 1

# RUN pnpm build

# # If using npm comment out above and use below instead
# # RUN npm run build

# # Production image, copy all the files and run next
# FROM base AS runner
# WORKDIR /app

# ENV NODE_ENV production
# # Uncomment the following line in case you want to disable telemetry during runtime.
# # ENV NEXT_TELEMETRY_DISABLED 1

# RUN addgroup --system --gid 1001 nodejs
# RUN adduser --system --uid 1001 nextjs

# COPY --from=builder /app/apps/factory/public ./public

# # Set the correct permission for prerender cache
# RUN mkdir .next
# RUN chown nextjs:nodejs .next

# # Automatically leverage output traces to reduce image size
# # https://nextjs.org/docs/advanced-features/output-file-tracing
# COPY --from=builder --chown=nextjs:nodejs /app/apps/factory/.next/standalone ./
# COPY --from=builder --chown=nextjs:nodejs /app/apps/factory/.next/static ./.next/static

# USER nextjs

# EXPOSE 3000

# ENV PORT 3000
# # set hostname to localhost
# ENV HOSTNAME "0.0.0.0"

# # server.js is created by next build from the standalone output
# # https://nextjs.org/docs/pages/api-reference/next-config-js/output
# CMD ["node", "server.js"]